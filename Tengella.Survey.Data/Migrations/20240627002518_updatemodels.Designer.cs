// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tengella.Survey.Data;

#nullable disable

namespace Tengella.Survey.Data.Migrations
{
    [DbContext(typeof(SurveyDbContext))]
    [Migration("20240627002518_updatemodels")]
    partial class updatemodels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tengella.Survey.Data.Models.Answer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnswerId"));

                    b.Property<string>("AnswerValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("int");

                    b.HasKey("AnswerId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SubmissionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Choice", b =>
                {
                    b.Property<int>("ChoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChoiceId"));

                    b.Property<int?>("ChoicePosition")
                        .HasColumnType("int");

                    b.Property<string>("ChoiceText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("ChoiceId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("QuestionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuestionPosition")
                        .HasColumnType("int");

                    b.Property<string>("QuestionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SurveyObjectId")
                        .HasColumnType("int");

                    b.HasKey("QuestionId");

                    b.HasIndex("SurveyObjectId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Submission", b =>
                {
                    b.Property<int>("SubmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubmissionId"));

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SurveyObjectId")
                        .HasColumnType("int");

                    b.Property<string>("UniqueToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubmissionId");

                    b.HasIndex("SurveyObjectId");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.SurveyObject", b =>
                {
                    b.Property<int>("SurveyObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SurveyObjectId"));

                    b.Property<string>("SurveyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SurveyObjectId");

                    b.HasIndex("UserId");

                    b.ToTable("SurveyObjects");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.SurveyTemplate", b =>
                {
                    b.Property<int>("SurveyTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SurveyTemplateId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurveyTemplateId");

                    b.ToTable("SurveyTemplates");

                    b.HasData(
                        new
                        {
                            SurveyTemplateId = 1,
                            Description = "Gauge customer satisfaction with our cleaning services.",
                            TemplateName = "Customer Satisfaction Survey"
                        },
                        new
                        {
                            SurveyTemplateId = 2,
                            Description = "Gather feedback from employees on the cleanliness of the workplace.",
                            TemplateName = "Employee Feedback Survey"
                        },
                        new
                        {
                            SurveyTemplateId = 3,
                            Description = "Understand market needs and preferences for cleaning services.",
                            TemplateName = "Market Research Survey"
                        });
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.TemplateChoice", b =>
                {
                    b.Property<int>("TemplateChoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateChoiceId"));

                    b.Property<string>("ChoiceText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemplateQuestionId")
                        .HasColumnType("int");

                    b.HasKey("TemplateChoiceId");

                    b.HasIndex("TemplateQuestionId");

                    b.ToTable("TemplateChoices");

                    b.HasData(
                        new
                        {
                            TemplateChoiceId = 1,
                            ChoiceText = "Very Satisfied",
                            TemplateQuestionId = 1
                        },
                        new
                        {
                            TemplateChoiceId = 2,
                            ChoiceText = "Satisfied",
                            TemplateQuestionId = 1
                        },
                        new
                        {
                            TemplateChoiceId = 3,
                            ChoiceText = "Neutral",
                            TemplateQuestionId = 1
                        },
                        new
                        {
                            TemplateChoiceId = 4,
                            ChoiceText = "Dissatisfied",
                            TemplateQuestionId = 1
                        },
                        new
                        {
                            TemplateChoiceId = 5,
                            ChoiceText = "Very Dissatisfied",
                            TemplateQuestionId = 1
                        },
                        new
                        {
                            TemplateChoiceId = 6,
                            ChoiceText = "Very Likely",
                            TemplateQuestionId = 2
                        },
                        new
                        {
                            TemplateChoiceId = 7,
                            ChoiceText = "Likely",
                            TemplateQuestionId = 2
                        },
                        new
                        {
                            TemplateChoiceId = 8,
                            ChoiceText = "Neutral",
                            TemplateQuestionId = 2
                        },
                        new
                        {
                            TemplateChoiceId = 9,
                            ChoiceText = "Unlikely",
                            TemplateQuestionId = 2
                        },
                        new
                        {
                            TemplateChoiceId = 10,
                            ChoiceText = "Very Unlikely",
                            TemplateQuestionId = 2
                        });
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.TemplateQuestion", b =>
                {
                    b.Property<int>("TemplateQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateQuestionId"));

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyTemplateId")
                        .HasColumnType("int");

                    b.HasKey("TemplateQuestionId");

                    b.HasIndex("SurveyTemplateId");

                    b.ToTable("TemplateQuestions");

                    b.HasData(
                        new
                        {
                            TemplateQuestionId = 1,
                            QuestionText = "How satisfied are you with our cleaning services?",
                            QuestionType = "single_choice",
                            SurveyTemplateId = 1
                        },
                        new
                        {
                            TemplateQuestionId = 2,
                            QuestionText = "How likely are you to recommend our services to others?",
                            QuestionType = "single_choice",
                            SurveyTemplateId = 1
                        },
                        new
                        {
                            TemplateQuestionId = 3,
                            QuestionText = "How would you rate the cleanliness of your workspace?",
                            QuestionType = "single_choice",
                            SurveyTemplateId = 2
                        },
                        new
                        {
                            TemplateQuestionId = 4,
                            QuestionText = "Do you have any suggestions for improving our cleaning services?",
                            QuestionType = "free_text",
                            SurveyTemplateId = 2
                        },
                        new
                        {
                            TemplateQuestionId = 5,
                            QuestionText = "How often do you use professional cleaning services?",
                            QuestionType = "single_choice",
                            SurveyTemplateId = 3
                        },
                        new
                        {
                            TemplateQuestionId = 6,
                            QuestionText = "What factors influence your decision to hire a cleaning service?",
                            QuestionType = "multiple_choice",
                            SurveyTemplateId = 3
                        });
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Answer", b =>
                {
                    b.HasOne("Tengella.Survey.Data.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.HasOne("Tengella.Survey.Data.Models.Submission", "Submission")
                        .WithMany("Answers")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Choice", b =>
                {
                    b.HasOne("Tengella.Survey.Data.Models.Question", null)
                        .WithMany("Choices")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Question", b =>
                {
                    b.HasOne("Tengella.Survey.Data.Models.SurveyObject", "SurveyObject")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyObjectId");

                    b.Navigation("SurveyObject");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Submission", b =>
                {
                    b.HasOne("Tengella.Survey.Data.Models.SurveyObject", "SurveyObject")
                        .WithMany()
                        .HasForeignKey("SurveyObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyObject");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.SurveyObject", b =>
                {
                    b.HasOne("Tengella.Survey.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.TemplateChoice", b =>
                {
                    b.HasOne("Tengella.Survey.Data.Models.TemplateQuestion", "TemplateQuestion")
                        .WithMany("Choices")
                        .HasForeignKey("TemplateQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TemplateQuestion");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.TemplateQuestion", b =>
                {
                    b.HasOne("Tengella.Survey.Data.Models.SurveyTemplate", null)
                        .WithMany("Questions")
                        .HasForeignKey("SurveyTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Question", b =>
                {
                    b.Navigation("Choices");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.Submission", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.SurveyObject", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.SurveyTemplate", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Tengella.Survey.Data.Models.TemplateQuestion", b =>
                {
                    b.Navigation("Choices");
                });
#pragma warning restore 612, 618
        }
    }
}
